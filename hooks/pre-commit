#!/usr/bin/env python3
"""Helper script to be used as a pre-commit hook."""
import os
import sys
import subprocess
import platform


def checkGitleaksInstalled():
    out = subprocess.getoutput("gitleaks version")
    if out == "8.16.4":
        return True
    return False   

def installGitleaks():
    os_name = platform.system()
    if os_name == "Linux":
        return os.system('wget https://github.com/gitleaks/gitleaks/releases/download/v8.16.4/gitleaks_8.16.4_linux_x64.tar.gz && tar -xvf gitleaks_8.16.4_linux_x64.tar.gz && chmod +x gitleaks && sudo mv gitleaks /usr/local/bin/')
    if os_name == "Darwin":
        return os.system('wget https://github.com/gitleaks/gitleaks/releases/download/v8.16.4/gitleaks_8.16.4_darwin_arm64.tar.gz && tar gitleaks_8.16.4_darwin_arm64.tar.gz && chmod +x gitleaks && sudo mv gitleaks /usr/local/bin/')
	   

def gitleaksEnabled():
    """Determine if the pre-commit hook for gitleaks is enabled."""
    out = subprocess.getoutput("git config --bool hooks.gitleaks")
    if out == "false":
        return False
    return True

if checkGitleaksInstalled():
    print('Gitleaks already installed')
else:
    installGitleaks()

if gitleaksEnabled():
    exitCode = os.WEXITSTATUS(os.system('gitleaks protect -v --staged'))
    if exitCode == 1:
        print('''Warning: gitleaks has detected sensitive information in your changes.
To disable the gitleaks precommit hook run the following command:

    git config hooks.gitleaks false
''')
        sys.exit(1)
else:
    print('gitleaks precommit disabled\
     (enable with `git config hooks.gitleaks true`)')